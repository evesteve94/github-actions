name: CI/CD Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Linting och Testing: lint och test körs på varje matrix-kombination.
  test-and-lint:
    # Matrix-strategi: Workflow körs på både Ubuntu och macOS samt med Node version 18 och 20.
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [18, 20]

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # Caching: actions/cache används för att cache:a node_modules, vilket snabbar upp byggtider.
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      - name: Install dependencies
        run: npm install

      - name: Lint code
        run: npm run lint

      - name: Run tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test-and-lint
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      # Artifact för byggoutput: Efter build-steget skapas en artifact för bygg-outputen, som simulerar ett release-paket.
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Simulate deployment to staging
        run: echo "Deploying to staging environment"
